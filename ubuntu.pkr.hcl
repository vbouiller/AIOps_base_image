packer {
  required_plugins {
    azure = {
      source  = "github.com/hashicorp/azure"
      version = "~> 2"
    }
  }
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "azure-arm" "autogenerated_1" {

  image_offer     = var.image_offer
  image_publisher = var.image_publisher
  image_sku       = var.image_sku

  os_type = var.image_os_type
  vm_size = var.image_vm_size

  location                          = var.image_location
  managed_image_name                = "${var.image_name_prefix}-${local.timestamp}"
  managed_image_resource_group_name = var.image_rg

  client_id       = var.azure_client_id
  client_secret   = var.azure_client_secret
  subscription_id = var.azure_subscription_id
  tenant_id       = var.azure_tenant_id
}

build {
  hcp_packer_registry {
    bucket_name = var.hcp_packer_bucket_name
    description = var.hcp_packer_bucket_description
  }


  sources = ["source.azure-arm.autogenerated_1"]

  provisioner "shell" {

    environment_vars = [
      "DD_API_KEY=${var.dd_api_key}", #Datadog agent config variables
      "DD_SITE=${var.dd_site}",
      "DD_APM_INSTRUMENTATION_ENABLED=host",
      "DD_ENV=test",
      "DD_SERVICE=chatbot",
      "DD_SOURCE=python",
      "DD_APM_INSTRUMENTATION_LIBRARIES=python",
      "DD_INSTALL_ONLY=true",
      "DD_OPENAI_LOGS_ENABLED=true",
      "DD_LLMOBS_ENABLED=1",
      "DD_LLMOBS_APP_NAME=chatbot"
    ]


    execute_command = "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'"
    inline = [
      "apt-get update", # Updates of the OS
      "apt-get upgrade -y",
      "bash -c \"$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)\"", #Adding Datadog monitoring agent
      "useradd --system --user-group --shell /bin/false vault",
      "wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg",
      "echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list",
      "sudo apt update -y && sudo apt install vault",
      "sudo apt install jq -y",
      "sudo echo '%vault ALL=(root) NOPASSWD: /usr/bin/systemctl restart gunicorn' > /etc/sudoers.d/vault",
      "useradd --system --user-group --shell /bin/false aiapp", #Setting up the system for the app
      "mkdir -p /home/aiapp/.venv",
      "sudo chmod -R a+rw /home/aiapp/",
      "cd /home/aiapp/.venv",
      "sudo -H apt install python3.10-venv -y",
      "python3 -m venv AIapp",
      ". /home/aiapp/.venv/AIapp/bin/activate",
      "wget https://bootstrap.pypa.io/get-pip.py",
      "sudo -H python3 get-pip.py",
      "sudo -H apt install python3-flask -y",
      "sudo pip install gunicorn",
      "python3 -m pip install flask-openai"
    ]
    inline_shebang = "/bin/bash -x"
  }

}